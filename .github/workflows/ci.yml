name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: labo04_db
          MYSQL_USER: labo04
          MYSQL_PASSWORD: labo04
        ports:
          - 3306:3306
        volumes:
          - ./db-init:/docker-entrypoint-initdb.d
        options: >-
          --health-cmd="mysqladmin ping -h localhost -ulabo04 -plabo04"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Creer fichier .env
        run: |
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_NAME=labo04_db" >> .env
          echo "DB_USER=labo04" >> .env
          echo "DB_PASS=labo04" >> .env
          echo "REDIS_HOST=127.0.0.1" >> .env
          echo "REDIS_PORT=6379" >> .env
          echo "REDIS_DB=0" >> .env
          cat .env

      - name: Wait for MySQL
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h127.0.0.1 -ulabo04 -plabo04 --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run init.sql
        run: mysql -h 127.0.0.1 -P 3306 -uroot -proot labo04_db < ./db-init/init.sql

      - name: Run tests
        working-directory: ./src
        run: python -m pytest

  deploy:
    runs-on: self-hosted
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Fix permissions before checkout
        run: |
          sudo rm -rf "$GITHUB_WORKSPACE"/*

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Docker network
        run: |
          docker compose down -v || true
          docker network rm labo04-network || true
          docker network create labo04-network

      - name: Deploy app
        run: |
          docker compose build
          docker compose up -d

      - name: Docker image prune
        if: always()
        run: docker image prune -af
